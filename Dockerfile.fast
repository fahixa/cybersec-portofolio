# Fast Docker build - Production optimized
FROM node:18-alpine AS builder

WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci --silent --no-audit

# Copy source code
COPY . .

# Build application (skip TypeScript checking for speed)
ENV NODE_ENV=production
RUN npm run build:no-typecheck

# Production stage
FROM nginx:alpine

# Copy built assets
COPY --from=builder /app/dist /usr/share/nginx/html

# Simple nginx config
RUN echo 'events { worker_connections 1024; } \
http { \
  include /etc/nginx/mime.types; \
  default_type application/octet-stream; \
  sendfile on; \
  keepalive_timeout 65; \
  gzip on; \
  gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript; \
  server { \
    listen 80; \
    server_name localhost; \
    root /usr/share/nginx/html; \
    index index.html; \
    location / { try_files $uri $uri/ /index.html; } \
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ { expires 1y; add_header Cache-Control "public, immutable"; } \
    location /health { return 200 "healthy\n"; add_header Content-Type text/plain; } \
  } \
}' > /etc/nginx/nginx.conf

EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]